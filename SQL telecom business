--Business Question #1 
--Wild West wants to know the monthly domestic message revenue by sales region, sales office and sales person.  They  want this information for business customers and need to see the total number of messages, minutes, and revenue for each salesperson assigned to the customer and totals for each sales office and sales region.  Use January 1999 data for signoff. 
CREATE VIEW MY_WILDWEST.GOLD.Q1 AS

with region_sales AS
(
select 
S.REP_REGION as reg_sale,
SUM(B.REV_AMT) as reg_$,
COUNT(B.TERM_ST) as reg_mes


FROM MY_WILDWEST.GOLD.BUSINESS_DATA9901 AS b
INNER JOIN MY_WILDWEST.GOLD.REPASSGN_DAT AS r
ON b.ORIG_AREA_CODE = r.area_code 
AND b.ORIG_LINE =r.line 
AND b.ORIG_EXCHANGE = r.exchange
INNER JOIN MY_WILDWEST.GOLD.SALESREP_DAT AS s
ON r.SALES_REP_NO = s.sales_rep_no
WHERE B.REV_AMT not like '% %' 
AND b.term_st in ('CO','ID', 'MT', 'WY', 'AZ', 'CA', 'NM', 'UT', 'AK', 'HI', 'OR', 'WA')
group by reg_sale
),
office_sales AS
(
select 
S.rep_office as office_sale,
SUM(B.REV_AMT) as office_$,
COUNT(B.TERM_ST) as office_mes


FROM MY_WILDWEST.GOLD.BUSINESS_DATA9901 AS b
INNER JOIN MY_WILDWEST.GOLD.REPASSGN_DAT AS r
ON b.ORIG_AREA_CODE = r.area_code 
AND b.ORIG_LINE =r.line 
AND b.ORIG_EXCHANGE = r.exchange
INNER JOIN MY_WILDWEST.GOLD.SALESREP_DAT AS s
ON r.SALES_REP_NO = s.sales_rep_no
WHERE B.REV_AMT not like '% %' 
AND b.term_st in ('CO','ID', 'MT', 'WY', 'AZ', 'CA', 'NM', 'UT', 'AK', 'HI', 'OR', 'WA')
group by office_sale
)

SELECT 
S.REP_REGION as Region,
S.rep_office as Office,
s.sales_rep_no as sales_nr,
(s.rep_first_name || s.rep_last_name) as sale_full_name,
SUM(B.REV_AMT) as salerep_$,
COUNT(B.TERM_ST) as Salerep_mes,
BC.CUST_ID AS CUS_ID,
BC.NAME AS CUS_NAME,
region_sales.reg_$,
region_sales.reg_mes,
office_sales.office_$,
office_sales.office_mes

-- we had a har time inturpiting the rev so we asumed the rev_atm is for the office and the rev_min for the salespersone 

FROM MY_WILDWEST.GOLD.BUSINESS_DATA9901 AS b
INNER JOIN MY_WILDWEST.GOLD.REPASSGN_DAT AS r
ON b.ORIG_AREA_CODE = r.area_code 
AND b.ORIG_LINE =r.line 
AND b.ORIG_EXCHANGE = r.exchange
INNER JOIN MY_WILDWEST.GOLD.BUSCUST_DAT AS BC
ON B.BILL_EXCHANGE = BC.EXCHANGE
AND B.BILL_LINE = BC.LINE
INNER JOIN MY_WILDWEST.GOLD.SALESREP_DAT AS s
ON r.SALES_REP_NO = s.sales_rep_no
INNER JOIN region_sales
ON S.REP_REGION = region_sales.reg_sale
INNER JOIN office_sales
ON S.rep_office = office_sales.office_sale



WHERE B.REV_AMT not like '% %' 
AND b.term_st in ('CO','ID', 'MT', 'WY', 'AZ', 'CA', 'NM', 'UT', 'AK', 'HI', 'OR', 'WA')
GROUP BY Region, 
Office, 
sales_nr, 
sale_full_name, 
region_sales.reg_$,
region_sales.reg_mes,
office_sales.office_$,
office_sales.office_mes,
CUS_ID,
CUS_NAME;

SELECT *
FROM MY_WILDWEST.GOLD.Q1
;



--Business Question #2 
--Wild West wants to wants to see a report showing the top ten sales reps for generating domestic business revenue for the 1st quarter of 1999.  They would like to see the sales rep name, his or her region, the total domestic business revenue generated and the percentage of total business revenue.  On the same report, they want to see the bottom ten reps using the same criterion and also the average amount generated by all sales reps.   

--create view my_wildwest.gold.lower_Quater as
WITH Quater_sale AS
(
SELECT *
FROM MY_WILDWEST.GOLD.BUSINESS_DATA9901
UNION
SELECT *
FROM MY_WILDWEST.GOLD.BUSINESS_DATA9902
UNION
SELECT *
FROM MY_WILDWEST.GOLD.BUSINESS_DATA9903
)

select 
S.REP_REGION as Region,
(s.rep_first_name || s.rep_last_name) as sale_full_name,
sum(b.rev_amt) as sale,
(
select 
sum(rev_amt) 
from Quater_sale 
) as total_sum,

(sale/ total_sum) as percent

FROM  Quater_sale as b
INNER JOIN MY_WILDWEST.GOLD.REPASSGN_DAT AS r
ON b.ORIG_AREA_CODE = r.area_code 
AND b.ORIG_LINE =r.line 
AND b.ORIG_EXCHANGE = r.exchange
INNER JOIN MY_WILDWEST.GOLD.SALESREP_DAT AS s
ON r.SALES_REP_NO = s.sales_rep_no
group by 1,2
order by sale
limit 10
;

SELECT *
FROM MY_WILDWEST.GOLD.TOP_QUATER
UNION
SELECT *
FROM MY_WILDWEST.GOLD.LOWER_QUATER
ORDER BY SALE DESC;


-- Business Question #3 
-- Wild West wants a monthly financial summary of all domestic messages by terminating state.  They want the total number of messages and revenue for each state and all states. Use January 1999 data for signoff. 



SELECT 
term_st as state,
COUNT(TERM_ST) as Nr_messages,
SUM(REV_AMT) as State_sale

-- we had a har time inturpiting the rev so we asumed the rev_atm is for the office and the rev_min for the salespersone 

FROM MY_WILDWEST.GOLD.BUSINESS_DATA9901 

WHERE REV_AMT not like '% %' and term_st not like '% %'
AND term_st in ('CO','ID', 'MT', 'WY', 'AZ', 'CA', 'NM', 'UT', 'AK', 'HI', 'OR', 'WA')
GROUP BY ROLLUP(term_st)
ORDER BY State_sale;

-- Business Question #4 
-- Wild West wants a switch traffic volume comparisons for international long distance calls.  For each switch id, Wild West needs to compare the number of messages and minutes for one month to the same numbers of the following month. They need to also see the percentage change, up of down, in messages and minutes from one month to another for any two given months. Use January and February 1999 data for signoff.  


with january as 
(
SELECT 
SUM(REV_MIN) AS jan_cal_min,
COUNT(*) as Jan_nr_mess
FROM MY_WILDWEST.GOLD.BUSINESS_DATA9901
WHERE term_st NOT in ('CO','ID', 'MT', 'WY', 'AZ', 'CA', 'NM', 'UT', 'AK', 'HI', 'OR', 'WA')
),
February as
(
SELECT 
SUM(REV_MIN) AS feb_cal_min,
COUNT(*) as feb_nr_mess
FROM MY_WILDWEST.GOLD.BUSINESS_DATA9902
WHERE term_st NOT in ('CO','ID', 'MT', 'WY', 'AZ', 'CA', 'NM', 'UT', 'AK', 'HI', 'OR', 'WA')
)
select 
*,
(feb_cal_min/jan_cal_min) || '%' as min_from_jan_to_feb,
(feb_nr_mess/Jan_nr_mess) || '%' as mess_from_jan_to_feb
from january
Full join February
;



 
--Business Question #5 
--Wild West wants to determine which business customers have monthly revenue (for a given month) which exceeds the average per-customer revenue of all business customers for that same month.  Use January 1999 data for signoff.


select 
bc.cust_id,
bc.name,
sum(b.rev_amt) AS rev

FROM MY_WILDWEST.GOLD.BUSINESS_DATA9901 AS b
INNER JOIN MY_WILDWEST.GOLD.BUSCUST_DAT AS BC
ON B.BILL_EXCHANGE = BC.EXCHANGE
AND B.BILL_LINE = BC.LINE

group by bc.cust_id, 2
having rev > avg(b.rev_amt)
ORDER BY REV DESC;
